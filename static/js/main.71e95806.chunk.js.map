{"version":3,"sources":["components/Header.tsx","components/Empty.tsx","components/Grid.tsx","components/Item/ItemSection.tsx","components/Item/AddSection.tsx","components/Item.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","props","className","total","href","target","rel","size","Empty","motion","div","initial","scale","rotate","animate","Grid","name","onChange","handleChange","value","disabled","ItemSection","useState","isSelected","setIsSelected","onClick","x","opacity","repeat","time","comment","removeSection","sectionIndex","AddSection","state","setState","handleUserKeyPress","useCallback","event","key","preventDefault","addSection","clearState","Object","fromEntries","keys","map","firstInput","document","querySelector","focus","handleInputChange","useEffect","window","addEventListener","removeEventListener","type","placeholder","required","min","Item","isActive","setIsActive","transition","stiffness","duration","removeExercice","arr","result","reduce","acc","object","renderTime","sections","cardType","spellCheck","title","AnimatePresence","section","i","handleSection","App","exos","setExos","AppElement","useRef","DownloadLink","a","element","querySelectorAll","elementFooter","forEach","style","html2canvas","windowWidth","offsetWidth","windowHeight","foreignObjectRendering","then","canvas","body","appendChild","id","ref","length","exo","index","e","field","currentExos","produce","v","data","newSection","initialExos","push","handleAddSection","current","splice","handleRemoveSection","slice","concat","alert","level","rythme","note","download","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71e95806.chunk.js","sourcesContent":["import React from \"react\";\n\n// Icons\nimport { GiSeaDragon } from \"react-icons/gi\";\nimport { FaGithubSquare } from \"react-icons/fa\";\n\ninterface Props {\n  total: number;\n}\n\nconst Header = (props: Props) => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__title\">\n        <GiSeaDragon />\n        <h1>Dragon Grid</h1>\n      </div>\n      <span>\n        <small>Total : {props.total}</small>\n      </span>\n      <div className=\"header__links-group\">\n        {/* <a href=\"\">About</a> */}\n        <a href=\"https://github.com/OliveCh12/drawg\" target={\"_blank\"} rel=\"noreferrer\">\n          <FaGithubSquare size={20}/>\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport { GiSeaDragon } from \"react-icons/gi\";\n\ninterface Props {}\n\nconst Empty = (props: Props) => {\n  return (\n    <div className=\"app-empty\">\n      <motion.div\n        initial={{ scale: 0, rotate: 360 }}\n        animate={{ scale: 1, rotate: 0 }}\n      >\n        <GiSeaDragon className=\"app-empty__icon\" />\n      </motion.div>\n\n      <p>Start by adding a new item clicking the button + down bellow</p>\n    </div>\n  );\n};\n\nexport default Empty;\n","import React from \"react\";\n\ninterface Props {\n  handleChange: any;\n}\n\nconst Grid = (props: Props) => {\n  return (\n    <div className=\"grid\">\n      <div className=\"grid__cell\">\n        <select name=\"type\" onChange={props.handleChange}>\n          <option value=\"‚ñ≥\">‚ñ≥</option>\n          <option value=\"‚ñ°\">‚ñ°</option>\n          <option value=\"‚óã\">‚óã</option>\n          <option value=\"‚ñ°/‚óã\">‚ñ°/‚óã</option>\n          <option value=\"‚ñ≥/‚ñ°\">‚ñ≥/‚ñ°</option>\n        </select>\n      </div>\n      <div className={`grid__cell`}>\n        <select name=\"note\" disabled={false} onChange={props.handleChange}>\n          <option value=\"\" className=\"empty\"></option>\n          <option value=\"üê≤\">üê≤</option>\n          <option value=\"‚úÖ\">‚úÖ</option>\n          <option value=\"‚ùå\">‚ùå</option>\n        </select>\n      </div>\n      <div className=\"grid__cell\">\n        <select name=\"level\" onChange={props.handleChange}>\n          <option value=\"0\">0</option>\n          <option value=\"|\">|</option>\n          <option value=\"||\">||</option>\n          <option value=\"|||\">|||</option>\n        </select>\n      </div>\n      <div className=\"grid__cell\">\n        <select name=\"rythme\" onChange={props.handleChange}>\n          <option value=\"S\">S</option>\n          <option value=\"M\">M</option>\n          <option value=\"F\">F</option>\n          <option value=\"R\">R</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface Props {\n  name: string;\n  repeat: number;\n  comment: string;\n  time: number;\n  removeSection: any;\n  sectionIndex: number;\n}\n\nconst ItemSection = (props: Props) => {\n  const [isSelected, setIsSelected] = useState(false);\n\n  return (\n    <motion.div\n      onClick={() => setIsSelected(!isSelected)}\n      className={`exo__section ${isSelected ? \"exo__section--active\" : \"\"}`}\n      initial={{ x: 100, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n    >\n      <span className=\"exo__section-name\">\n        {props.name}{\" \"}\n        <strong>\n          {props.repeat}√ó{props.time}min\n        </strong>\n      </span>\n      <span className=\"exo__section-comment\">{props.comment}</span>\n      {isSelected && (\n        <button\n          className=\"exo__section-remove\"\n          onClick={() => props.removeSection(props.sectionIndex)}\n        >\n          -\n        </button>\n      )}\n    </motion.div>\n  );\n};\n\nexport default ItemSection;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\ninterface Props {\n  onChange: any;\n  addSection: any;\n}\n\ninterface StateProps {\n  name: string;\n  repeat: number;\n  time: number;\n  comment: string;\n}\n\nconst AddSection = (props: Props) => {\n  // State of AddSection component.\n  const [state, setState] = useState<StateProps | any>({\n    name: \"\",\n    repeat: \"\",\n    time: \"\",\n    comment: \"\",\n  });\n\n\n  // If User press enter key, useCallback into Listener\n  const handleUserKeyPress = useCallback(\n    (event: any) => {\n      const { key } = event;\n\n      if (key === \"Enter\") {\n      event.preventDefault()\n\n        props.addSection(state);\n        // Clear state data\n        const clearState = Object.fromEntries(\n          Object.keys(state).map((key) => [key, \"\"])\n        );\n        setState(clearState);\n\n        const firstInput: HTMLInputElement | null = document.querySelector(\"input[name='name']\")\n\n        firstInput?.focus()\n        \n      }\n    },\n    [state, props]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleUserKeyPress);\n    return () => {\n      window.removeEventListener(\"keydown\", handleUserKeyPress);\n    };\n  }, [state, handleUserKeyPress]);\n\n  function handleInputChange(event: any) {\n    const value = event.target.value;\n    setState({ ...state, [event.target.name]: value });\n  }\n\n  return (\n    <div className=\"exo__inputs\">\n      <input\n        name=\"name\"\n        type=\"text\"\n        placeholder=\"Name*\"\n        onChange={handleInputChange}\n        value={state[\"name\"]}\n        required\n      />\n      <input\n        name=\"repeat\"\n        type=\"number\"\n        min={0}\n        placeholder=\"Repeat*\"\n        onChange={handleInputChange}\n        value={state[\"repeat\"]}\n        required\n      />\n\n      <input\n        name=\"time\"\n        type=\"number\"\n        min={0}\n        placeholder=\"30 min\"\n        onChange={handleInputChange}\n        value={state[\"time\"]}\n        required\n      />\n      <input\n        name=\"comment\"\n        type=\"text\"\n        placeholder=\"Comment\"\n        onChange={handleInputChange}\n        value={state[\"comment\"]}\n      />\n      <button\n        type=\"submit\"\n        className=\"button button--add\"\n        onClick={() => props.addSection(state)}\n      >\n        Add Section\n      </button>\n    </div>\n  );\n};\n\nexport default AddSection;\n","import React, { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport Grid from \"./Grid\";\nimport ItemSection from \"./Item/ItemSection\";\nimport AddSection from \"./Item/AddSection\";\n\ninterface Props {\n  index: number;\n  time: number;\n  title: string;\n  cardType: string;\n  sections: any;\n  handleChange: any;\n  handleSection: any;\n  removeSection: any;\n  removeExercice: any;\n  isActive?: boolean;\n}\n\nconst Item = (props: Props) => {\n  const [isActive, setIsActive] = useState(false);\n\n  // Additione le temps de chaque section\n  function renderTime(arr: any) {\n    const result = arr.reduce(\n      (acc: any, object: any) => acc + object.time * object.repeat,\n      0\n    );\n\n    if (result < 60) {\n      return result + \" min\";\n    } else {\n      return result / 60 + \" h\";\n    }\n  }\n\n  // function checkItemIndex(index: number) {\n  //   console.log(index)\n\n  //   if (index === props.index) {\n  //     setIsActive(!isActive)\n  //   } else {\n  //     setIsActive(false)\n  //   }\n  // }\n\n  function setItemActive(itemState: boolean) {\n    setIsActive(itemState)\n  }\n\n\n  return (\n    <motion.div\n      initial={{ x: 200, opacity: 0 }}\n      animate={{ x: 0, opacity: 1 }}\n      transition={{ stiffness: 10, duration: 0.2 }}\n      className=\"exo\"\n    >\n      <div className=\"exo__body\">\n        <button\n          className=\"button button--remove\"\n          onClick={props.removeExercice}\n        >\n          -\n        </button>\n        <div className=\"exo__header\">\n          <span className=\"exo__time\">‚è±Ô∏è {renderTime(props.sections)}</span>\n          <input\n            className=\"exo__index\"\n            type=\"text\"\n            name=\"cardType\"\n            placeholder=\"Card Type\"\n            onChange={props.handleChange}\n            value={props.cardType}\n          />\n        </div>\n\n        <input\n          className=\"exo__title\"\n          spellCheck={false}\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Titre\"\n          value={props.title}\n          onChange={props.handleChange}\n        />\n        <Grid handleChange={props.handleChange} />\n      </div>\n      <div className=\"exo__sections\">\n        <AnimatePresence>\n          {props.sections.map((section: any, i: number) => (\n            <ItemSection\n              key={i}\n              sectionIndex={i}\n              name={section.name}\n              repeat={section.repeat}\n              comment={section.comment}\n              time={section.time}\n              removeSection={props.removeSection}\n            />\n          ))}\n        </AnimatePresence>\n      </div>\n      <div className=\"exo__footer\">\n        <button\n          className=\"button button--section\"\n          onClick={() => setItemActive(!isActive)}\n        >\n          +\n        </button>\n        <AnimatePresence>\n          {isActive && (\n            <AddSection\n              // targetItem={props.index}\n              onChange={props.handleChange}\n              addSection={props.handleSection}\n            />\n          )}\n        </AnimatePresence>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Item;\n","import React, { useState, useRef } from \"react\";\nimport { produce } from \"immer\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { MdOutlineLibraryAdd } from \"react-icons/md\";\n\nimport html2canvas from \"html2canvas\";\n\nimport Header from \"./components/Header\";\nimport Empty from \"./components/Empty\";\nimport Item from \"./components/Item\";\nimport \"./App.scss\";\n\nfunction App() {\n  const [exos, setExos]: any = useState([]);\n\n  const AppElement = useRef<HTMLDivElement>(null);\n\n  const DownloadLink = useRef<HTMLAnchorElement>(null);\n\n  // Take a screenshot of a specific area of the DOM.\n  async function screenshotDOM() {\n    const element: any = await document.querySelector(\".exos\");\n    const elementFooter: any = await document.querySelectorAll(\".exo__footer\");\n\n    await elementFooter.forEach((element: any) => {\n      element.style = \"display: none\";\n    });\n\n    await html2canvas(element, {\n      windowWidth: element.offsetWidth,\n      windowHeight: 1080,\n      foreignObjectRendering: false,\n    })?.then(function (canvas) {\n      document.body.appendChild(canvas);\n\n      // DownloadLink.current?.setAttribute(\"href\", canvas.toDataURL(\"image/png\"));\n    });\n  }\n\n  // Handle input to get a simple string\n  function handleInputChange(\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n    index: number\n  ): void {\n    let field = event.target.name;\n\n    setExos((currentExos: any) =>\n      produce(currentExos, (v: any) => {\n        v[index][field] = event.target.value;\n      })\n    );\n  }\n\n  // Add new exercice to the list\n  function addExercice() {\n    if (exos.length >= 10) {\n      alert(\"You can only have tree exercices\");\n    } else {\n      setExos([\n        ...exos,\n        {\n          title: \"\",\n          cardType: \"\",\n          type: \"\",\n          level: \"\",\n          rythme: \"\",\n          note: \"\",\n          sections: [],\n        },\n      ]);\n    }\n  }\n\n  // Remove Exercice at index\n  function removeExercice(index: number) {\n    setExos(exos.slice(0, index).concat(exos.slice(index + 1, exos.length)));\n  }\n\n  // Add new section to exercice\n  function handleAddSection(newSection: any, index: number) {\n    let initialExos = [...exos]\n    initialExos[index].sections.push(newSection)\n    setExos(initialExos)\n  }\n\n  //Remove section from exercice\n  function handleRemoveSection(sectionIndex: any, index: number) {\n    let current = [...exos];\n    current[index].sections.splice(sectionIndex, 1);\n    setExos(current);\n  }\n\n  return (\n    <div className=\"App\" id=\"App\" ref={AppElement}>\n      <Header total={exos.length} />\n      {exos.length <= 0 ? (\n        <Empty />\n      ) : (\n        <div className=\"exos\">\n          <AnimatePresence>\n            {exos.map((exo: any, index: number) => (\n              <Item\n                key={index}\n                index={index}\n                title={exo.title}\n                cardType={exo.cardType}\n                time={exo.time}\n                sections={exo.sections}\n                handleChange={(e: any) => handleInputChange(e, index)}\n                handleSection={(data: any) => handleAddSection(data, index)}\n                removeSection={(sectionIndex: React.SyntheticEvent) =>\n                  handleRemoveSection(sectionIndex, index)\n                }\n                removeExercice={() => removeExercice(index)}\n                isActive={true}\n              />\n            ))}\n          </AnimatePresence>\n        </div>\n      )}\n\n      <div className=\"controls\">\n        <button className=\"button button--new\" onClick={addExercice}>\n          <MdOutlineLibraryAdd scale={1.2} />\n        </button>\n        <a\n          className=\"button button--default\"\n          ref={DownloadLink}\n          onClick={screenshotDOM}\n          download={true}\n          href=\"/\"\n        >\n          Download PNG\n        </a>\n      </div>\n{/* \n      <pre\n        style={{\n          width: 400,\n          margin: \"auto\",\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n        }}\n      >\n        <code>{JSON.stringify(exos, null, 2)}</code>\n      </pre> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}